version: '3.8'

services:
  # API Server
  api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./data:/app/data
    command: python api_server.py
    restart: unless-stopped
    
  # Web Interface
  web:
    build: .
    ports:
      - "8501:8501"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./data:/app/data
    command: streamlit run web_interface.py --server.port=8501 --server.address=0.0.0.0
    restart: unless-stopped
    depends_on:
      - api
      
  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    
  # PostgreSQL for persistent storage (optional)
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=scenario_analyzer
      - POSTGRES_USER=analyzer
      - POSTGRES_PASSWORD=analyzer_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

volumes:
  redis_data:
  postgres_data: